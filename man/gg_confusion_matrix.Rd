% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-confusion-matrix.R
\name{gg_confusion_matrix}
\alias{gg_confusion_matrix}
\title{Plot confusion matrix with ggplot2}
\usage{
gg_confusion_matrix(
  data,
  outcome,
  exposure,
  positive = NULL,
  combine = FALSE,
  combine.only = FALSE,
  smooth = FALSE,
  smooth.args = list(),
  threshold = "best",
  legend.collect = TRUE,
  legend.scale.low.color = "white",
  legend.scale.high.color = NULL,
  legend.scale.height = 0.75,
  legend.scale.breaks = NULL,
  label.text.color = "black",
  label.text.size = 14,
  label.axis = NULL,
  ncol = NULL,
  nrow = NULL,
  tag.levels = "A",
  language = NULL,
  font.family = NULL,
  font.size = NULL,
  ...
)
}
\arguments{
\item{data}{a data frame.}

\item{outcome}{the outcome variable name contain in data, which can be a factor
or a numerical variable, but must be a binary variable.}

\item{exposure}{one or more exposure variable names are included in data.}

\item{positive}{in which  positive of outcome variable to make the comparison.
By default, positive is automatically defined. If outcome is a factor variable,
then positive is defined as the highest level. If outcome is a numerical
variable, then positive is defined as the largest value.}

\item{combine}{a logical, indicating whether to use multiple exposure variables
for joint prediction using logistic regression.}

\item{combine.only}{a logical, indicating whether to show only the results of
joint predictions.}

\item{smooth}{a logical, indicating whether to smooth a ROC curve.}

\item{smooth.args}{further arguments for smooth, see \link[pROC:smooth]{pROC::smooth} function.}

\item{threshold}{threshold, default "best", the optimal cut-off is the threshold
that calculating by youden index.}

\item{legend.collect}{A logical specifying how guides should be collected in the layout.}

\item{legend.scale.low.color}{legend scale low color, default 'white'.}

\item{legend.scale.high.color}{legend scale high color, default 'white'.}

\item{legend.scale.height}{legend scale height, default 0.75 cm.}

\item{legend.scale.breaks}{legend scale breaks, default auto. It is only
executed when legend.collect is equal to TRUE.}

\item{label.text.color}{label text color, default black.}

\item{label.text.size}{label text size, default 14.}

\item{label.axis}{labels for axis, length must be 2.}

\item{ncol}{the dimensions of the grid to create - if both are NULL it will
use the same logic as facet_wrap() to set the dimensions.}

\item{nrow}{the dimensions of the grid to create - if both are NULL it will
use the same logic as facet_wrap() to set the dimensions.}

\item{tag.levels}{a character vector defining the enumeration format to use at
each level.  It can also be a list containing character vectors defining
arbitrary tag sequences. If any element in the list is a scalar and one of
'a', 'A', '(a)', '(A)', '[a]', '[A]', '(1)'  or '[1]', this level will be
expanded to the expected sequence.}

\item{language}{language, typically “en”, or "zh", default "en".}

\item{font.family}{font family, default 'serif'.}

\item{font.size}{font size, default 12.}

\item{...}{further arguments pass to \link{gg_theme_sci} function.}
}
\value{
a ggplot.
}
\description{
Plot confusion matrix with ggplot2
}
\examples{
# Basic
gg_confusion_matrix(aSAH, outcome = "outcome", exposure = "age")

# Multiple variables
gg_confusion_matrix(aSAH, outcome = "outcome", exposure = "age:ndka")

# Do not collect legends
gg_confusion_matrix(aSAH,
                    outcome = "outcome",
                    exposure = "age:ndka",
                    legend.collect = FALSE)

# Set color
gg_confusion_matrix(aSAH,
                    outcome = "outcome",
                    exposure = "age:ndka",
                    legend.collect = TRUE,
                    legend.scale.low.color  = "#B4D6CB",
                    legend.scale.high.color = "#91BCE6")

# Set scale
gg_confusion_matrix(aSAH,
                    outcome = "outcome",
                    exposure = "age:ndka",
                    legend.collect = TRUE,
                    legend.scale.low.color  = "#B4D6CB",
                    legend.scale.high.color = "#91BCE6",
                    legend.scale.breaks = seq(10, 60, 5),
                    legend.scale.height = 1.5)
}
